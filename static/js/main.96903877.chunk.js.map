{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/APIGallery/ApiGallery.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/Modal.jsx","components/ImageGallery/Loader.jsx","components/ImageGallery/Button.jsx","components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["Searchbar","state","name","handleChange","value","currentTarget","setState","handleSubmit","evt","preventDefault","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","axios","defaults","baseURL","axiosGetGallery","searchQuery","page","URL","get","then","response","data","hits","ImageGalleryItem","gallerys","toggleModalImg","map","id","webformatURL","tags","largeImageURL","src","alt","onClick","modalRoot","document","querySelector","ModalWin","handleKeyDown","e","code","onClose","window","addEventListener","removeEventListener","srcImgs","createPortal","Loaders","color","height","width","Buton","onFetchGallery","ImageGallery","largeImg","showModals","toggleModal","gallery","isLoader","Loader","length","Modal","App","error","FormSubmitHandler","query","fetchGallery","ApiGallery","prevState","catch","finally","onClickLoad","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","isLoading","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96903877.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    name: \"\",\r\n  };\r\n\r\n  handleChange = ({ currentTarget }) => {\r\n    const { value } = currentTarget;\r\n    this.setState({\r\n      name: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"20452679-d2c9a4c3f38fef4a414948741\";\r\naxios.defaults.baseURL = \"https://pixabay.com/api\";\r\nconst axiosGetGallery = (searchQuery, page) => {\r\n  const URL = `/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return axios.get(URL).then((response) => response.data.hits);\r\n};\r\n\r\nexport default axiosGetGallery;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  render() {\r\n    const { gallerys, toggleModalImg } = this.props;\r\n    return gallerys.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n      <li key={id} className=\"ImageGalleryItem\">\r\n        <img\r\n          src={webformatURL}\r\n          alt={tags}\r\n          className=\"ImageGalleryItem-image\"\r\n          onClick={() => toggleModalImg({ tags, largeImageURL })}\r\n        />\r\n      </li>\r\n    ));\r\n  }\r\n}\r\nImageGalleryItem.propTypes = {\r\n  gallerys: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  toggleModalImg: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass ModalWin extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { srcImgs, tags } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\">\r\n        <div>\r\n          <img src={srcImgs} alt={tags} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModalWin.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  srcImgs: PropTypes.string.isRequired,\r\n  alt: PropTypes.string,\r\n};\r\nexport default ModalWin;\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Loaders = () => {\r\n  return (\r\n    <div className=\"loader spinner\">\r\n      <Loader type=\"ThreeDots\" color=\"#303f9f\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\nexport default Loaders;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Buton extends Component {\r\n  // componentDidMount = () => {\r\n  //   window.scrollTo({\r\n  //     top: document.documentElement.scrollHeight,\r\n  //     behavior: \"smooth\",\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    const { onFetchGallery } = this.props;\r\n    return (\r\n      <button type=\"submit\" className=\"Button\" onClick={onFetchGallery}>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButon.propTypes = {\r\n  onFetchGallery: PropTypes.func.isRequired,\r\n};\r\nexport default Buton;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\nimport Modal from \"./Modal\";\r\nimport Loader from \"./Loader\";\r\nimport Buton from \"./Button\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    largeImg: \"\",\r\n    alt: \"\",\r\n    showModals: false,\r\n  };\r\n  toggleModal = () => {\r\n    this.setState(({ showModals }) => ({\r\n      showModals: !showModals,\r\n    }));\r\n  };\r\n\r\n  toggleModalImg = (gallery) => {\r\n    this.setState({\r\n      largeImg: gallery.largeImageURL,\r\n      alt: gallery.tags,\r\n    });\r\n    this.toggleModal();\r\n  };\r\n  render() {\r\n    const { gallery, onFetchGallery, isLoader } = this.props;\r\n    const { showModals, largeImg, alt } = this.state;\r\n    return (\r\n      <div className=\"ImageBlock\">\r\n        <ul className=\"ImageGallery\">\r\n          <ImageGalleryItem\r\n            gallerys={gallery}\r\n            toggleModalImg={this.toggleModalImg}\r\n          />\r\n        </ul>\r\n        {isLoader && <Loader />}\r\n        {gallery.length > 0 && !isLoader && (\r\n          <Buton onFetchGallery={onFetchGallery} />\r\n        )}\r\n        {showModals && (\r\n          <Modal srcImgs={largeImg} tags={alt} onClose={this.toggleModal} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  gallery: PropTypes.array.isRequired,\r\n  onFetchGallery: PropTypes.func.isRequired,\r\n  isLoader: PropTypes.bool.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport ApiGallery from \"./components/APIGallery/ApiGallery\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery.jsx\";\n\nclass App extends Component {\n  state = {\n    gallery: [],\n    searchQuery: \"\",\n    page: 1,\n    isLoader: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchGallery();\n    }\n    if (!this.state.isLoading) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  FormSubmitHandler = (query) => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      gallery: [],\n      error: null,\n    });\n  };\n\n  fetchGallery = () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ isLoader: true });\n\n    ApiGallery(searchQuery.name, page)\n      .then((hits) => {\n        this.setState((prevState) => ({\n          gallery: [...prevState.gallery, ...hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoader: false }));\n  };\n  onClickLoad = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n    this.fetchGallery();\n  };\n\n  render() {\n    const { gallery, isLoader } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.FormSubmitHandler} />\n        <ImageGallery\n          gallery={gallery}\n          onFetchGallery={this.fetchGallery}\n          isLoader={isLoader}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}